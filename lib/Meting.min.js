(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }
function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _objectSpread(a) {
  for (var b = 1; b < arguments.length; b++) {
    var c = null == arguments[b] ? {} : arguments[b],
      d = Object.keys(c);
    "function" == typeof Object.getOwnPropertySymbols && (d = d.concat(Object.getOwnPropertySymbols(c).filter(function (a) {
      return Object.getOwnPropertyDescriptor(c, a).enumerable;
    }))), d.forEach(function (b) {
      _defineProperty(a, b, c[b]);
    });
  }
  return a;
}
function _defineProperty(a, b, c) {
  return b in a ? Object.defineProperty(a, b, {
    value: c,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : a[b] = c, a;
}
var MetingJSElement = /*#__PURE__*/function (_HTMLElement) {
  _inherits(MetingJSElement, _HTMLElement);
  var _super = _createSuper(MetingJSElement);
  function MetingJSElement() {
    _classCallCheck(this, MetingJSElement);
    return _super.apply(this, arguments);
  }
  _createClass(MetingJSElement, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      window.APlayer && window.fetch && (this._init(), this._parse());
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this.lock || this.aplayer.destroy();
    }
  }, {
    key: "_camelize",
    value: function _camelize(a) {
      return a.replace(/^[_.\- ]+/, "").toLowerCase().replace(/[_.\- ]+(\w|$)/g, function (a, b) {
        return b.toUpperCase();
      });
    }
  }, {
    key: "_init",
    value: function _init() {
      var a = {};
      for (var _b = 0; _b < this.attributes.length; _b += 1) a[this._camelize(this.attributes[_b].name)] = this.attributes[_b].value;
      var b = ["server", "type", "id", "api", "auth", "auto", "lock", "name", "title", "artist", "author", "url", "cover", "pic", "lyric", "lrc"];
      this.meta = {};
      for (var c = 0; c < b.length; c++) {
        var d = b[c];
        this.meta[d] = a[d], delete a[d];
      }
      this.config = a, this.api = this.meta.api || window.meting_api || "https://api.i-meto.com/meting/api?server=:server&type=:type&id=:id&r=:r", this.meta.auto && this._parse_link();
    }
  }, {
    key: "_parse_link",
    value: function _parse_link() {
      var a = [["music.163.com.*song.*id=(\\d+)", "netease", "song"], ["music.163.com.*album.*id=(\\d+)", "netease", "album"], ["music.163.com.*artist.*id=(\\d+)", "netease", "artist"], ["music.163.com.*playlist.*id=(\\d+)", "netease", "playlist"], ["music.163.com.*discover/toplist.*id=(\\d+)", "netease", "playlist"], ["y.qq.com.*song/(\\w+).html", "tencent", "song"], ["y.qq.com.*album/(\\w+).html", "tencent", "album"], ["y.qq.com.*singer/(\\w+).html", "tencent", "artist"], ["y.qq.com.*playsquare/(\\w+).html", "tencent", "playlist"], ["y.qq.com.*playlist/(\\w+).html", "tencent", "playlist"], ["xiami.com.*song/(\\w+)", "xiami", "song"], ["xiami.com.*album/(\\w+)", "xiami", "album"], ["xiami.com.*artist/(\\w+)", "xiami", "artist"], ["xiami.com.*collect/(\\w+)", "xiami", "playlist"]];
      for (var b = 0; b < a.length; b++) {
        var c = a[b],
          d = new RegExp(c[0]),
          e = d.exec(this.meta.auto);
        if (null !== e) return this.meta.server = c[1], this.meta.type = c[2], void (this.meta.id = e[1]);
      }
    }
  }, {
    key: "_parse",
    value: function _parse() {
      var _this = this;
      if (this.meta.url) {
        var _a = {
          name: this.meta.name || this.meta.title || "Audio name",
          artist: this.meta.artist || this.meta.author || "Audio artist",
          url: this.meta.url,
          cover: this.meta.cover || this.meta.pic,
          lrc: this.meta.lrc || this.meta.lyric || "",
          type: this.meta.type || "auto"
        };
        return _a.lrc || (this.meta.lrcType = 0), this.innerText && (_a.lrc = this.innerText, this.meta.lrcType = 2), void this._loadPlayer([_a]);
      }
      var a = this.api.replace(":server", this.meta.server).replace(":type", this.meta.type).replace(":id", this.meta.id).replace(":auth", this.meta.auth).replace(":r", Math.random());
      fetch(a).then(function (a) {
        return a.json();
      }).then(function (a) {
        return _this._loadPlayer(a);
      });
    }
  }, {
    key: "_loadPlayer",
    value: function _loadPlayer(a) {
      var b = {
        audio: a,
        mutex: !0,
        lrcType: this.meta.lrcType || 3,
        storageName: "metingjs"
      };
      if (a.length) {
        var _a2 = _objectSpread({}, b, this.config);
        for (var _b2 in _a2) ("true" === _a2[_b2] || "false" === _a2[_b2]) && (_a2[_b2] = "true" === _a2[_b2]);
        var c = document.createElement("div");
        _a2.container = c, this.appendChild(c), this.aplayer = new APlayer(_a2);
      }
    }
  }]);
  return MetingJSElement;
}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));
console.log("\n %c MetingJS v2.0.1 %c https://github.com/metowolf/MetingJS \n", "color: #fadfa3; background: #030307; padding:5px 0;", "background: #fadfa3; padding:5px 0;"), window.customElements && !window.customElements.get("meting-js") && (window.MetingJSElement = MetingJSElement, window.customElements.define("meting-js", MetingJSElement));

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJ0aGVtZXMvbWluaW1hL3NvdXJjZS9saWIvTWV0aW5nLm1pbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBLFlBQVk7O0FBQUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUFTLGFBQWEsQ0FBQyxDQUFDLEVBQUM7RUFBQyxLQUFJLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsU0FBUyxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQztJQUFDLElBQUksQ0FBQyxHQUFDLElBQUksSUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEdBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztNQUFDLENBQUMsR0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUFDLFVBQVUsSUFBRSxPQUFPLE1BQU0sQ0FBQyxxQkFBcUIsS0FBRyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVMsQ0FBQyxFQUFDO01BQUMsT0FBTyxNQUFNLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVU7SUFBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFTLENBQUMsRUFBQztNQUFDLGVBQWUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUFBLENBQUMsQ0FBQztFQUFBO0VBQUMsT0FBTyxDQUFDO0FBQUE7QUFBQyxTQUFTLGVBQWUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztFQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUM7SUFBQyxLQUFLLEVBQUMsQ0FBQztJQUFDLFVBQVUsRUFBQyxDQUFDLENBQUM7SUFBQyxZQUFZLEVBQUMsQ0FBQyxDQUFDO0lBQUMsUUFBUSxFQUFDLENBQUM7RUFBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUM7QUFBQTtBQUFDLElBQU0sZUFBZTtFQUFBO0VBQUE7RUFBQTtJQUFBO0lBQUE7RUFBQTtFQUFBO0lBQUE7SUFBQSxPQUFxQiw2QkFBbUI7TUFBQyxNQUFNLENBQUMsT0FBTyxJQUFFLE1BQU0sQ0FBQyxLQUFLLEtBQUcsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUFBO0VBQUM7SUFBQTtJQUFBLHVDQUFzQjtNQUFDLElBQUksQ0FBQyxJQUFJLElBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUU7SUFBQTtFQUFDO0lBQUE7SUFBQSwwQkFBVSxDQUFDLEVBQUM7TUFBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsRUFBQyxVQUFDLENBQUMsRUFBQyxDQUFDO1FBQUEsT0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFO01BQUEsRUFBQztJQUFBO0VBQUM7SUFBQTtJQUFBLHdCQUFPO01BQUMsSUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDO01BQUMsS0FBSSxJQUFJLEVBQUMsR0FBQyxDQUFDLEVBQUMsRUFBQyxHQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLEVBQUMsSUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBQyxDQUFDLENBQUMsS0FBSztNQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsUUFBUSxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsS0FBSyxFQUFDLE1BQU0sRUFBQyxNQUFNLEVBQUMsTUFBTSxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDLFFBQVEsRUFBQyxLQUFLLEVBQUMsT0FBTyxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUMsS0FBSyxDQUFDO01BQUMsSUFBSSxDQUFDLElBQUksR0FBQyxDQUFDLENBQUM7TUFBQyxLQUFJLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQztRQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7TUFBQTtNQUFDLElBQUksQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFDLElBQUksQ0FBQyxHQUFHLEdBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUUsTUFBTSxDQUFDLFVBQVUsSUFBRSx5RUFBeUUsRUFBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksSUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFO0lBQUE7RUFBQztJQUFBO0lBQUEsOEJBQWE7TUFBQyxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsZ0NBQWdDLEVBQUMsU0FBUyxFQUFDLE1BQU0sQ0FBQyxFQUFDLENBQUMsaUNBQWlDLEVBQUMsU0FBUyxFQUFDLE9BQU8sQ0FBQyxFQUFDLENBQUMsa0NBQWtDLEVBQUMsU0FBUyxFQUFDLFFBQVEsQ0FBQyxFQUFDLENBQUMsb0NBQW9DLEVBQUMsU0FBUyxFQUFDLFVBQVUsQ0FBQyxFQUFDLENBQUMsNENBQTRDLEVBQUMsU0FBUyxFQUFDLFVBQVUsQ0FBQyxFQUFDLENBQUMsNEJBQTRCLEVBQUMsU0FBUyxFQUFDLE1BQU0sQ0FBQyxFQUFDLENBQUMsNkJBQTZCLEVBQUMsU0FBUyxFQUFDLE9BQU8sQ0FBQyxFQUFDLENBQUMsOEJBQThCLEVBQUMsU0FBUyxFQUFDLFFBQVEsQ0FBQyxFQUFDLENBQUMsa0NBQWtDLEVBQUMsU0FBUyxFQUFDLFVBQVUsQ0FBQyxFQUFDLENBQUMsZ0NBQWdDLEVBQUMsU0FBUyxFQUFDLFVBQVUsQ0FBQyxFQUFDLENBQUMsd0JBQXdCLEVBQUMsT0FBTyxFQUFDLE1BQU0sQ0FBQyxFQUFDLENBQUMseUJBQXlCLEVBQUMsT0FBTyxFQUFDLE9BQU8sQ0FBQyxFQUFDLENBQUMsMEJBQTBCLEVBQUMsT0FBTyxFQUFDLFFBQVEsQ0FBQyxFQUFDLENBQUMsMkJBQTJCLEVBQUMsT0FBTyxFQUFDLFVBQVUsQ0FBQyxDQUFDO01BQUMsS0FBSSxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUM7UUFBQyxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1VBQUMsQ0FBQyxHQUFDLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztVQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUMsSUFBRyxJQUFJLEtBQUcsQ0FBQyxFQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxNQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUFBO0lBQUM7RUFBQztJQUFBO0lBQUEseUJBQVE7TUFBQTtNQUFDLElBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUM7UUFBQyxJQUFJLEVBQUMsR0FBQztVQUFDLElBQUksRUFBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksSUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBRSxZQUFZO1VBQUMsTUFBTSxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFFLGNBQWM7VUFBQyxHQUFHLEVBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHO1VBQUMsS0FBSyxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRztVQUFDLEdBQUcsRUFBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBRSxFQUFFO1VBQUMsSUFBSSxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFFO1FBQU0sQ0FBQztRQUFDLE9BQU8sRUFBQyxDQUFDLEdBQUcsS0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBQyxDQUFDLENBQUMsRUFBQyxJQUFJLENBQUMsU0FBUyxLQUFHLEVBQUMsQ0FBQyxHQUFHLEdBQUMsSUFBSSxDQUFDLFNBQVMsRUFBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBQyxDQUFDLENBQUMsRUFBQyxLQUFLLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztNQUFBO01BQUMsSUFBSSxDQUFDLEdBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksRUFBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7TUFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsQ0FBQztRQUFBLE9BQUUsQ0FBQyxDQUFDLElBQUksRUFBRTtNQUFBLEVBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxDQUFDO1FBQUEsT0FBRSxLQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztNQUFBLEVBQUM7SUFBQTtFQUFDO0lBQUE7SUFBQSw0QkFBWSxDQUFDLEVBQUM7TUFBQyxJQUFJLENBQUMsR0FBQztRQUFDLEtBQUssRUFBQyxDQUFDO1FBQUMsS0FBSyxFQUFDLENBQUMsQ0FBQztRQUFDLE9BQU8sRUFBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBRSxDQUFDO1FBQUMsV0FBVyxFQUFDO01BQVUsQ0FBQztNQUFDLElBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBQztRQUFDLElBQUksR0FBQyxHQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUFDLEtBQUksSUFBSSxHQUFDLElBQUksR0FBQyxFQUFDLENBQUMsTUFBTSxLQUFHLEdBQUMsQ0FBQyxHQUFDLENBQUMsSUFBRSxPQUFPLEtBQUcsR0FBQyxDQUFDLEdBQUMsQ0FBQyxNQUFJLEdBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxNQUFNLEtBQUcsR0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDLEdBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUM7UUFBQyxHQUFDLENBQUMsU0FBUyxHQUFDLENBQUMsRUFBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFDLElBQUksQ0FBQyxPQUFPLEdBQUMsSUFBSSxPQUFPLENBQUMsR0FBQyxDQUFDO01BQUE7SUFBQztFQUFDO0VBQUE7QUFBQSxpQ0FBaGpGLFdBQVc7QUFBc2lGLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0VBQWtFLEVBQUMscURBQXFELEVBQUMscUNBQXFDLENBQUMsRUFBQyxNQUFNLENBQUMsY0FBYyxJQUFFLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLEtBQUcsTUFBTSxDQUFDLGVBQWUsR0FBQyxlQUFlLEVBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFDLGVBQWUsQ0FBQyxDQUFDIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiXCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX29iamVjdFNwcmVhZChhKXtmb3IodmFyIGI9MTtiPGFyZ3VtZW50cy5sZW5ndGg7YisrKXt2YXIgYz1udWxsPT1hcmd1bWVudHNbYl0/e306YXJndW1lbnRzW2JdLGQ9T2JqZWN0LmtleXMoYyk7XCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyYmKGQ9ZC5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhjKS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYyxhKS5lbnVtZXJhYmxlfSkpKSxkLmZvckVhY2goZnVuY3Rpb24oYil7X2RlZmluZVByb3BlcnR5KGEsYixjW2JdKX0pfXJldHVybiBhfWZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShhLGIsYyl7cmV0dXJuIGIgaW4gYT9PYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHt2YWx1ZTpjLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6YVtiXT1jLGF9Y2xhc3MgTWV0aW5nSlNFbGVtZW50IGV4dGVuZHMgSFRNTEVsZW1lbnR7Y29ubmVjdGVkQ2FsbGJhY2soKXt3aW5kb3cuQVBsYXllciYmd2luZG93LmZldGNoJiYodGhpcy5faW5pdCgpLHRoaXMuX3BhcnNlKCkpfWRpc2Nvbm5lY3RlZENhbGxiYWNrKCl7dGhpcy5sb2NrfHx0aGlzLmFwbGF5ZXIuZGVzdHJveSgpfV9jYW1lbGl6ZShhKXtyZXR1cm4gYS5yZXBsYWNlKC9eW18uXFwtIF0rLyxcIlwiKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1tfLlxcLSBdKyhcXHd8JCkvZywoYSxiKT0+Yi50b1VwcGVyQ2FzZSgpKX1faW5pdCgpe2xldCBhPXt9O2ZvcihsZXQgYj0wO2I8dGhpcy5hdHRyaWJ1dGVzLmxlbmd0aDtiKz0xKWFbdGhpcy5fY2FtZWxpemUodGhpcy5hdHRyaWJ1dGVzW2JdLm5hbWUpXT10aGlzLmF0dHJpYnV0ZXNbYl0udmFsdWU7bGV0IGI9W1wic2VydmVyXCIsXCJ0eXBlXCIsXCJpZFwiLFwiYXBpXCIsXCJhdXRoXCIsXCJhdXRvXCIsXCJsb2NrXCIsXCJuYW1lXCIsXCJ0aXRsZVwiLFwiYXJ0aXN0XCIsXCJhdXRob3JcIixcInVybFwiLFwiY292ZXJcIixcInBpY1wiLFwibHlyaWNcIixcImxyY1wiXTt0aGlzLm1ldGE9e307Zm9yKHZhciBjPTA7YzxiLmxlbmd0aDtjKyspe2xldCBkPWJbY107dGhpcy5tZXRhW2RdPWFbZF0sZGVsZXRlIGFbZF19dGhpcy5jb25maWc9YSx0aGlzLmFwaT10aGlzLm1ldGEuYXBpfHx3aW5kb3cubWV0aW5nX2FwaXx8XCJodHRwczovL2FwaS5pLW1ldG8uY29tL21ldGluZy9hcGk/c2VydmVyPTpzZXJ2ZXImdHlwZT06dHlwZSZpZD06aWQmcj06clwiLHRoaXMubWV0YS5hdXRvJiZ0aGlzLl9wYXJzZV9saW5rKCl9X3BhcnNlX2xpbmsoKXtsZXQgYT1bW1wibXVzaWMuMTYzLmNvbS4qc29uZy4qaWQ9KFxcXFxkKylcIixcIm5ldGVhc2VcIixcInNvbmdcIl0sW1wibXVzaWMuMTYzLmNvbS4qYWxidW0uKmlkPShcXFxcZCspXCIsXCJuZXRlYXNlXCIsXCJhbGJ1bVwiXSxbXCJtdXNpYy4xNjMuY29tLiphcnRpc3QuKmlkPShcXFxcZCspXCIsXCJuZXRlYXNlXCIsXCJhcnRpc3RcIl0sW1wibXVzaWMuMTYzLmNvbS4qcGxheWxpc3QuKmlkPShcXFxcZCspXCIsXCJuZXRlYXNlXCIsXCJwbGF5bGlzdFwiXSxbXCJtdXNpYy4xNjMuY29tLipkaXNjb3Zlci90b3BsaXN0LippZD0oXFxcXGQrKVwiLFwibmV0ZWFzZVwiLFwicGxheWxpc3RcIl0sW1wieS5xcS5jb20uKnNvbmcvKFxcXFx3KykuaHRtbFwiLFwidGVuY2VudFwiLFwic29uZ1wiXSxbXCJ5LnFxLmNvbS4qYWxidW0vKFxcXFx3KykuaHRtbFwiLFwidGVuY2VudFwiLFwiYWxidW1cIl0sW1wieS5xcS5jb20uKnNpbmdlci8oXFxcXHcrKS5odG1sXCIsXCJ0ZW5jZW50XCIsXCJhcnRpc3RcIl0sW1wieS5xcS5jb20uKnBsYXlzcXVhcmUvKFxcXFx3KykuaHRtbFwiLFwidGVuY2VudFwiLFwicGxheWxpc3RcIl0sW1wieS5xcS5jb20uKnBsYXlsaXN0LyhcXFxcdyspLmh0bWxcIixcInRlbmNlbnRcIixcInBsYXlsaXN0XCJdLFtcInhpYW1pLmNvbS4qc29uZy8oXFxcXHcrKVwiLFwieGlhbWlcIixcInNvbmdcIl0sW1wieGlhbWkuY29tLiphbGJ1bS8oXFxcXHcrKVwiLFwieGlhbWlcIixcImFsYnVtXCJdLFtcInhpYW1pLmNvbS4qYXJ0aXN0LyhcXFxcdyspXCIsXCJ4aWFtaVwiLFwiYXJ0aXN0XCJdLFtcInhpYW1pLmNvbS4qY29sbGVjdC8oXFxcXHcrKVwiLFwieGlhbWlcIixcInBsYXlsaXN0XCJdXTtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7bGV0IGM9YVtiXSxkPW5ldyBSZWdFeHAoY1swXSksZT1kLmV4ZWModGhpcy5tZXRhLmF1dG8pO2lmKG51bGwhPT1lKXJldHVybiB0aGlzLm1ldGEuc2VydmVyPWNbMV0sdGhpcy5tZXRhLnR5cGU9Y1syXSx2b2lkKHRoaXMubWV0YS5pZD1lWzFdKX19X3BhcnNlKCl7aWYodGhpcy5tZXRhLnVybCl7bGV0IGE9e25hbWU6dGhpcy5tZXRhLm5hbWV8fHRoaXMubWV0YS50aXRsZXx8XCJBdWRpbyBuYW1lXCIsYXJ0aXN0OnRoaXMubWV0YS5hcnRpc3R8fHRoaXMubWV0YS5hdXRob3J8fFwiQXVkaW8gYXJ0aXN0XCIsdXJsOnRoaXMubWV0YS51cmwsY292ZXI6dGhpcy5tZXRhLmNvdmVyfHx0aGlzLm1ldGEucGljLGxyYzp0aGlzLm1ldGEubHJjfHx0aGlzLm1ldGEubHlyaWN8fFwiXCIsdHlwZTp0aGlzLm1ldGEudHlwZXx8XCJhdXRvXCJ9O3JldHVybiBhLmxyY3x8KHRoaXMubWV0YS5scmNUeXBlPTApLHRoaXMuaW5uZXJUZXh0JiYoYS5scmM9dGhpcy5pbm5lclRleHQsdGhpcy5tZXRhLmxyY1R5cGU9Miksdm9pZCB0aGlzLl9sb2FkUGxheWVyKFthXSl9bGV0IGE9dGhpcy5hcGkucmVwbGFjZShcIjpzZXJ2ZXJcIix0aGlzLm1ldGEuc2VydmVyKS5yZXBsYWNlKFwiOnR5cGVcIix0aGlzLm1ldGEudHlwZSkucmVwbGFjZShcIjppZFwiLHRoaXMubWV0YS5pZCkucmVwbGFjZShcIjphdXRoXCIsdGhpcy5tZXRhLmF1dGgpLnJlcGxhY2UoXCI6clwiLE1hdGgucmFuZG9tKCkpO2ZldGNoKGEpLnRoZW4oYT0+YS5qc29uKCkpLnRoZW4oYT0+dGhpcy5fbG9hZFBsYXllcihhKSl9X2xvYWRQbGF5ZXIoYSl7bGV0IGI9e2F1ZGlvOmEsbXV0ZXg6ITAsbHJjVHlwZTp0aGlzLm1ldGEubHJjVHlwZXx8MyxzdG9yYWdlTmFtZTpcIm1ldGluZ2pzXCJ9O2lmKGEubGVuZ3RoKXtsZXQgYT1fb2JqZWN0U3ByZWFkKHt9LGIsdGhpcy5jb25maWcpO2ZvcihsZXQgYiBpbiBhKShcInRydWVcIj09PWFbYl18fFwiZmFsc2VcIj09PWFbYl0pJiYoYVtiXT1cInRydWVcIj09PWFbYl0pO2xldCBjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7YS5jb250YWluZXI9Yyx0aGlzLmFwcGVuZENoaWxkKGMpLHRoaXMuYXBsYXllcj1uZXcgQVBsYXllcihhKX19fWNvbnNvbGUubG9nKFwiXFxuICVjIE1ldGluZ0pTIHYyLjAuMSAlYyBodHRwczovL2dpdGh1Yi5jb20vbWV0b3dvbGYvTWV0aW5nSlMgXFxuXCIsXCJjb2xvcjogI2ZhZGZhMzsgYmFja2dyb3VuZDogIzAzMDMwNzsgcGFkZGluZzo1cHggMDtcIixcImJhY2tncm91bmQ6ICNmYWRmYTM7IHBhZGRpbmc6NXB4IDA7XCIpLHdpbmRvdy5jdXN0b21FbGVtZW50cyYmIXdpbmRvdy5jdXN0b21FbGVtZW50cy5nZXQoXCJtZXRpbmctanNcIikmJih3aW5kb3cuTWV0aW5nSlNFbGVtZW50PU1ldGluZ0pTRWxlbWVudCx3aW5kb3cuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwibWV0aW5nLWpzXCIsTWV0aW5nSlNFbGVtZW50KSk7XG4iXX0=
